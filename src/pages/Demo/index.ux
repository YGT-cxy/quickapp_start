<import name="tabbar-index" src="./components/tabbar-index.ux"></import>
<import name="tabbar-user" src="./components/tabbar-user.ux"></import>

<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <div class="tabbar-content">
      <!-- <component is="{{ 'tabbar-' + tabbarName }}"></component> -->\
      <tabbar-index if="{{ tabbarName === 'index' }}"></tabbar-index>
      <tabbar-user if="{{ tabbarName === 'user' }}"></tabbar-user>
    </div>

    <div class="tabbar-foot">
      <div class="tabbar-item" @click="switchTabbar('index')">
        <text class="tabbar-title">首页</text>
      </div>
      <div class="tabbar-item" @click="switchTabbar('user')">
        <text class="tabbar-title">用户</text>
      </div>
    </div>
  </div>
</template>

<script>
import router from '@system.router'

export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    title: '示例页面',
    tabbarName: 'index'
  },
  routeDetail () {
    // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
    router.push ({
      uri: '/DemoDetail'
    })
  },
  switchTabbar(tabbarName) {
    console.log(tabbarName)
    if (tabbarName === this.tabbarName) {
      return
    } else {
      this.tabbarName = tabbarName
    }
  }
}
</script>

<style lang="less">
  .demo-page {
    height: 100%;
    flex-direction: column;
  }

  .tabbar {

    &-content {
      padding-bottom: 80px;
    }

    &-foot {
      position: fixed;
      bottom: 0px;
      flex-direction: row;
      width: 100%;
      height: 60px;
      background-color: #7fffd4;
    }

    &-item {
      flex: 1;
    }

    &-title {
      flex: 1;
      text-align: center;
    }
  }
</style>
